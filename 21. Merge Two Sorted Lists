/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* curr = new ListNode(0);
        ListNode* temp = curr;
        
        while(list1!=NULL || list2!=NULL){
            if (list1!=NULL && list2!=NULL){
                if (list1->val<=list2->val){
                    ListNode* N = new ListNode(list1->val);
                    curr->next = N;
                    list1 = list1->next;
                    curr = curr->next;
                    
                }
                else{
                    ListNode* N = new ListNode(list2->val);
                    curr->next = N;
                    list2 = list2->next;
                    curr = curr->next;
                }
            }
            
            else if (list1!=NULL && list2==NULL){
                ListNode* N = new ListNode(list1->val);
                curr->next = N;
                list1 = list1->next;
                curr = curr->next;
            }
            
            else if (list1==NULL && list2!=NULL){
                ListNode* N = new ListNode(list2->val);
                curr->next = N;
                list2 = list2->next;
                curr = curr->next;
            }
        }
        return temp->next;
    }
};
